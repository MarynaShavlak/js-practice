{"mappings":"gfAAAA,EAAA,S","sources":["src/async-await/async-await.js"],"sourcesContent":["const BASE_URL = 'http://localhost:3000 ';\n\nasync function addBook(book) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(book),\n  };\n\n  const response = await fetch(`${BASE_URL}/books`, options);\n  const newBook = await response.json();\n\n  return newBook;\n}\n\n// async function addBookAndUpdateUI() {\n//   try {\n//     const book = await addBook({});\n//     console.log(book);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n// addBookAndUpdateUI();\n\nasync function fetchBooks() {\n  const response = await fetch(`${BASE_URL}/books`);\n  const books = await response.json();\n  return books;\n}\n\nasync function fetchBookById(bookId) {\n  const response = await fetch(`${BASE_URL}/books/${bookId}`);\n  const book = await response.json();\n  return book;\n}\n\nasync function removeBook(bookId) {\n  const url = `${BASE_URL}/books/${bookId}`;\n  const options = {\n    method: 'DELETE',\n  };\n\n  const response = await fetch(url, options);\n  const book = await response.json();\n  return book;\n}\n\nasync function updateBookById(update, bookId) {\n  const options = {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(update),\n  };\n\n  const response = await fetch(`${BASE_URL}/books/${bookId}`, options);\n  const book = await response.json();\n  return book;\n}\n"],"names":["parcelRequire"],"version":3,"file":"async-await.6402dace.js.map"}